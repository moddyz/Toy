name: Build and test

# Run the jobs for pushes and pull requests targetting main branch.
on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  # ASWF VFX Platform based build
  aswf-build:
    strategy:
      matrix:
        vfx:
          - 2020
    runs-on: ubuntu-18.04
    container:
        image: aswf/ci-base:${{ matrix.vfx }}
    steps:
      - uses: actions/checkout@v2
      - name: Build Toy
        run: |
          mkdir build
          cd build
          cmake \
            -DCMAKE_CUDA_COMPILER="/usr/local/cuda/bin/nvcc" \
            -DBUILD_TESTING=ON \
            -DCMAKE_INSTALL_PREFIX="/tmp/Toy/" \
            ..
          cmake --build  . -- VERBOSE=1 -j8 all test install

  # Run automated code formatting checks.
  code-formatting-check:
    runs-on: ubuntu-18.04 
    steps:
      - name: Install dependencies (Linux)
        run: |
          sudo apt-get install clang-format-10
      - uses: actions/checkout@v2
      - name: Run clang-format on source code
        run: |
          find . \
            -name ".git" -prune -o \
            -name "thirdparty" -prune -o \
            -name "*.cpp" -type f -exec clang-format -i --verbose {} + -o \
            -name "*.h" -type f -exec clang-format -i --verbose {} +
      - name: Check for code differences
        run: |
          set +e
          git diff --color
          git diff-index --quiet HEAD --; EXIT_CODE=$?
          set -e
          if [ $EXIT_CODE -ne 0 ]; then echo "C++ code formatting check failed.  Please run clang-format on *.h and *.cpp, then push your changes."; fi
          exit $EXIT_CODE
